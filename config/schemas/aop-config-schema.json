{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://example.com/schemas/aop-config-schema",
  "title": "AopConfig",
  "type": "object",
  "description": "Represents the configuration for Aspect-Oriented Programming (AOP).",
  "definitions": {
    "Pointcut": {
      "$id": "#/definitions/pointcut",
      "type": "object",
      "description": "Represents the configuration for a pointcut.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the pointcut.",
          "readOnly": true
        },
        "expression": {
          "type": "string",
          "description": "The expression that defines the pointcut."
        }
      },
      "required": [
        "id",
        "expression"
      ]
    },
    "PointcutExpression": {
      "$id": "#/definitions/pointcut-expression",
      "type": "object",
      "description": "Represents the configuration for a pointcut expression.",
      "oneOf": [
        {
          "$ref": "#/definitions/class-filter"
        },
        {
          "$ref": "#/definitions/method-matcher"
        }
      ]
    },
    "Advice": {
      "$id": "#/definitions/advice",
      "type": "object",
      "description": "Represents the configuration for an advice.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of advice.",
          "readOnly": true
        },
        "pointcutRef": {
          "type": "string",
          "description": "The reference to a pointcut by its id."
        },
        "pointcut": {
          "type": "string",
          "description": "The pointcut expression."
        },
        "method": {
          "type": "string",
          "description": "The method name that contains the advice logic.",
          "readOnly": true
        },
        "returning": {
          "type": "string",
          "description": "The name of the returning value (used in afterReturning advice)."
        },
        "throwing": {
          "type": "string",
          "description": "The name of the throwing value (used in afterThrowing advice)."
        },
        "argNames": {
          "type": "string",
          "description": "The argument names used in the advice method."
        }
      },
      "required": [
        "type",
        "method"
      ]
    },
    "Advisor": {
      "$id": "#/definitions/advisor",
      "type": "object",
      "description": "Represents the configuration for an advisor.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the advisor.",
          "readOnly": true
        },
        "advice": {
          "$ref": "#/definitions/advice"
        },
        "expression": {
          "description": "The pointcut expression associated with the advisor.",
          "$ref": "#/definitions/pointcut-expression"
        }
      },
      "required": [
        "id",
        "advice",
        "expression"
      ]
    },
    "ClassFilter": {
      "$id": "#/definitions/class-filter",
      "type": "object",
      "description": "Represents the configuration for a class filter.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the class filter.",
          "readOnly": true
        },
        "pattern": {
          "oneOf": [
            {
              "type": "string",
              "description": "The class name pattern to match.",
              "readOnly": true
            },
            {
              "type": "object",
              "description": "A regular expression object.",
              "properties": {
                "pattern": {
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "pattern"
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "A class name pattern to match.",
                    "readOnly": true
                  },
                  {
                    "type": "object",
                    "description": "A regular expression object.",
                    "properties": {
                      "pattern": {
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "pattern"
                    ]
                  }
                ]
              },
              "description": "An array of class name patterns or regular expressions to match.",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "id",
        "pattern"
      ]
    },
    "MethodMatcher": {
      "$id": "#/definitions/method-matcher",
      "type": "object",
      "description": "Represents the configuration for a method matcher.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the method matcher.",
          "readOnly": true
        },
        "isRuntime": {
          "type": "boolean",
          "description": "Flag to indicate if the method matcher is evaluated at runtime."
        },
        "pattern": {
          "oneOf": [
            {
              "type": "string",
              "description": "The class name pattern to match.",
              "readOnly": true
            },
            {
              "type": "object",
              "description": "A regular expression object.",
              "properties": {
                "pattern": {
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "pattern"
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "A class name pattern to match.",
                    "readOnly": true
                  },
                  {
                    "type": "object",
                    "description": "A regular expression object.",
                    "properties": {
                      "pattern": {
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "pattern"
                    ]
                  }
                ]
              },
              "description": "An array of class name patterns or regular expressions to match.",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "id",
        "pattern"
      ]
    },
    "Aspect": {
      "$id": "#/definitions/aspect",
      "type": "object",
      "description": "Represents the configuration for an aspect.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the aspect.",
          "readOnly": true
        },
        "ref": {
          "type": "string",
          "description": "The reference to the aspect class.",
          "readOnly": true
        },
        "order": {
          "type": "number",
          "description": "The order in which the aspect should be applied."
        },
        "pointcuts": {
          "type": "array",
          "description": "The pointcuts defined within the aspect.",
          "items": {
            "$ref": "#/definitions/pointcut"
          }
        },
        "advices": {
          "type": "array",
          "description": "The advices defined within the aspect.",
          "items": {
            "$ref": "#/definitions/advice"
          }
        }
      },
      "required": [
        "id",
        "ref",
        "advices"
      ]
    },
    "Bean": {
      "$id": "#/definitions/bean",
      "type": "object",
      "description": "Represents the configuration for a bean.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the bean.",
          "readOnly": true
        },
        "class": {
          "type": "string",
          "description": "The class name of the bean."
        },
        "properties": {
          "type": "object",
          "description": "The properties to set on the bean.",
          "additionalProperties": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/bean"
              },
              {
                "type": "object",
                "properties": {
                  "static-field": {
                    "type": "string",
                    "description": "The static field to inject."
                  }
                },
                "required": [
                  "static-field"
                ]
              }
            ]
          }
        }
      },
      "required": [
        "id",
        "class"
      ]
    }
  },
  "properties": {
    "pointcuts": {
      "type": "array",
      "description": "The global pointcuts defined in the configuration.",
      "items": {
        "$ref": "#/definitions/pointcut"
      }
    },
    "aspects": {
      "type": "array",
      "description": "The aspects defined in the configuration.",
      "items": {
        "$ref": "#/definitions/aspect"
      }
    },
    "advisors": {
      "type": "array",
      "description": "The advisors defined in the configuration.",
      "items": {
        "$ref": "#/definitions/advisor"
      }
    },
    "beans": {
      "type": "array",
      "description": "The beans defined in the configuration.",
      "items": {
        "$ref": "#/definitions/bean"
      }
    },
    "proxyTargetClass": {
      "type": "boolean",
      "description": "Flag to indicate if CGLIB proxies should be used."
    },
    "useAspectJ": {
      "type": "boolean",
      "description": "Flag to indicate if AspectJ proxies should be used."
    },
    "frozen": {
      "type": "boolean",
      "description": "Flag to indicate if the proxy configuration is frozen."
    },
    "exposeProxy": {
      "type": "boolean",
      "description": "Flag to indicate if the current proxy should be exposed."
    }
  },
  "required": [
    "aspects"
  ]
}
